<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nl.pm.server.registry.dao.StatisticsDao">
    <resultMap id="userProjectTimeBO" type="com.nl.pm.server.registry.param.AreaUsersProjectTimeEntityParam">
        <result column="userId" jdbcType="INTEGER" property="userId" />
        <result column="nickname" jdbcType="VARCHAR" property="nickname" />
        <result column="areaId" jdbcType="INTEGER" property="areaId" />
        <result column="areaName" jdbcType="VARCHAR" property="areaName" />
        <collection property="projectTimeList" ofType="com.nl.pm.server.registry.entity.ProjectAdvanceEntity">
            <id column="systemProjectId" jdbcType="INTEGER" property="systemProjectId" />
            <result column="projectName" jdbcType="VARCHAR" property="name" />
            <result column="hours" jdbcType="DOUBLE" property="hours" />
        </collection>
    </resultMap>


    <resultMap id="AreaProjectCostBO" type="com.nl.pm.server.registry.param.AreaProjectCostEntityParam">
        <result column="projectId" jdbcType="INTEGER" property="projectId" />
        <result column="projectName" jdbcType="VARCHAR" property="projectName" />
        <result column="areaId" jdbcType="INTEGER" property="areaId" />
        <result column="areaName" jdbcType="VARCHAR" property="areaName" />
        <result column="projectHours" jdbcType="DOUBLE" property="projectHours" />
        <collection property="detailList" ofType="com.nl.pm.server.registry.param.AreaProjectCostDetailEntityParam">
            <result column="userId" jdbcType="INTEGER" property="userId" />
            <result column="nickname" jdbcType="VARCHAR" property="nickname" />
            <result column="date" jdbcType="DATE" property="date" />
            <result column="dateLong" jdbcType="BIGINT" property="dateLong" />
            <result column="hours" jdbcType="DOUBLE" property="hours" />
            <result column="desc" jdbcType="VARCHAR" property="desc" />
        </collection>
    </resultMap>



    <select id="queryUserProjectTimeList" resultMap="userProjectTimeBO">
        select
            u.id as userId,
            max(u.nickname) as nickname,
            max(u.area_id) as areaId,
            max(a.name) as areaName,
            p.system_project_id as systemProjectId,
            max(p.name) as projectName,
            sum(drt.hours) as hours
        from day_report_task as drt
        inner join day_report as dr on drt.day_report_id = dr.id
        inner join `user` as u on u.id = dr.user_id
        inner join `area` as a on a.id = u.area_id
        inner join `role` as r on u.role_id = r.id
        left join project as p on drt.project_id = p.id
        <where>
            <if test="areaId != null">
                a.id = #{areaId}
            </if>
            <if test="leaveFlag != null">
                and u.status = #{leaveFlag}
            </if>
            <if test="startDate != null">
                and dr.date <![CDATA[>=]]> #{startDate}
            </if>
            <if test="endDate != null">
                and dr.date <![CDATA[<=]]> #{endDate}
            </if>
        </where>
        group by u.id,p.system_project_id
        order by u.status desc,u.area_id asc, (case when r.code = 'AREA_MANAGER' then 1  when r.code = 'GROUP_MANAGER' then 2 when r.code = 'EMPLOYEE' then 3 else 4 end) asc ,u.nickname asc
    </select>
    
    
    <select id="queryUserWorkLeaveHours" resultType="com.nl.pm.server.registry.param.UserTimeEntityParam">

        select
        temp.userId as userId,
        temp.nickname as nickname,
        temp.areaId as areaId,
        temp.areaName as areaName,
        temp.hours as hours,
        temp.leaveHours as leaveHours,
        (temp.leaveHours / (temp.hours+temp.leaveHours)) as ratio
        from

        (
            select
            temp1.userId as userId,
            max(temp1.nickname) as nickname,
            max(temp1.areaId) as areaId,
            max(temp1.areaName) as areaName,
            sum(temp1.hours) as hours,
            sum(temp1.leaveHours) as leaveHours
            from
            (
                select
                u.id as userId,
                max(u.nickname) as nickname,
                max(u.area_id) as areaId,
                max(a.name) as areaName,
                (case when sum(drt.hours) is null then 0 else sum(drt.hours) end) as hours,
                0 as leaveHours
                from day_report as dr
                inner join day_report_task as drt on drt.day_report_id = dr.id
                inner join `user` as u on u.id = dr.user_id
                inner join `area` as a on a.id = u.area_id
                inner join `role` as r on u.role_id = r.id
                <where>
                    <if test="areaId != null">
                        a.id = #{areaId}
                    </if>
                    <if test="leaveFlag != null">
                        and u.status = #{leaveFlag}
                    </if>
                    <if test="startDate != null">
                        and dr.date <![CDATA[>=]]> #{startDate}
                    </if>
                    <if test="endDate != null">
                        and dr.date <![CDATA[<=]]> #{endDate}
                    </if>
                </where>
                group by u.id

                union

                select
                u.id as userId,
                max(u.nickname) as nickname,
                max(u.area_id) as areaId,
                max(a.name) as areaName,
                0 as hours,
                (case when sum(de.leave_hour) is null then 0 else sum(de.leave_hour) end) as leaveHours
                from day_report as dr
                inner join day_exchange as de on de.day_report_id = dr.id
                inner join `user` as u on u.id = dr.user_id
                inner join `area` as a on a.id = u.area_id
                inner join `role` as r on u.role_id = r.id
                <where>
                    <if test="areaId != null">
                        a.id = #{areaId}
                    </if>
                    <if test="leaveFlag != null">
                        and u.status = #{leaveFlag}
                    </if>
                    <if test="startDate != null">
                        and dr.date <![CDATA[>=]]> #{startDate}
                    </if>
                    <if test="endDate != null">
                        and dr.date <![CDATA[<=]]> #{endDate}
                    </if>
                </where>
                group by u.id
            ) as temp1
            group by temp1.userId
        ) as temp
        order by ratio desc



    </select>
    <select id="queryOneSelfProjectTimeList"
            resultType="com.nl.pm.server.registry.entity.ProjectAdvanceEntity">

        select
        p.id,
        max(p.area_id) as areaId,
        max(a.name) as areaName,
        max(p.name) as name,
        sum(drt.hours) as hours
        from day_report_task as drt
        inner join day_report as dr on drt.day_report_id = dr.id
        inner join project as p on drt.project_id = p.id
        inner join `area` as a on a.id = p.area_id
        <where>
            dr.user_id = #{userId}
            <if test="startDate != null">
                and dr.date <![CDATA[>=]]> #{startDate}
            </if>
            <if test="endDate != null">
                and dr.date <![CDATA[<=]]> #{endDate}
            </if>
        </where>
        group by p.id
        order by sum(drt.hours) desc

    </select>
    <select id="queryDayReportDetailListByProjectIdsAndTimes"
            resultType="com.nl.pm.server.registry.entity.DayReportTaskAdvanceEntity">
        select
            drt.project_id as projectId,
            dr.date as reportDate,
            drt.hours as hours,
            drt.desc
        from day_report as dr
        inner join day_report_task as drt on dr.id = drt.day_report_id
        <where>
            dr.user_id = #{userId}
            <if test="startDate != null">
                and dr.date <![CDATA[>=]]> #{startDate}
            </if>
            <if test="endDate != null">
                and dr.date <![CDATA[<=]]> #{endDate}
            </if>
            <if test="projectIds != null and projectIds.size()>0">
                and drt.project_id in
                <foreach collection="projectIds" item="pid" separator="," open="(" close=")">
                    #{pid}
                </foreach>
            </if>

        </where>
        order by dr.date desc



    </select>



    <select id="queryAreaProjectCostList" resultMap="AreaProjectCostBO">
        select
            `projectId`,
            `projectName`,
        <if test="costType!='MY_EARN'">
            `areaId`,
            `areaName`,
        </if>
        <if test="costType=='MY_EARN'">
            `mainAreaId` as areaId,
            `mainAreaName` as areaName,
        </if>
            `userId`,
            `nickname`,
            `date`,
             (UNIX_TIMESTAMP(`date`)*1000) as `dateLong`,
            `hours`,
            `desc`
        from area_project_user_cost
        <where>
            <if test="startDate!=null">
                `date` <![CDATA[ >= ]]> #{startDate}
            </if>
            <if test="endDate!=null">
                and `date` <![CDATA[ <= ]]> #{endDate}
            </if>
            <if test="costType=='MY_MAIN_COST'">
                and `mainAreaId` = #{areaId}
            </if>
            <if test="costType=='MY_EARN'">
                and `mainAreaId` != #{areaId}
                and `areaId` = #{areaId}
            </if>
            <if test="costType=='OTHER_COST'">
                and `mainAreaId` = #{areaId}
                and `areaId` != #{areaId}
            </if>

            order by (case when mainAreaId =#{areaId} then 1 when mainAreaId = 1 then 3 else 2 end) asc,
                    (case when areaId =#{areaId} then 1 else 2 end) asc,
                    `areaName` asc,`projectName` asc,`nickname` asc,`date` desc

        </where>
    </select>
    <select id="queryAreaProjectCostGroupList"
            resultType="com.nl.pm.server.registry.param.AreaProjectCostEntityParam">

        select
        `projectId`,
        `projectName`,
        <if test="costType=='MY_MAIN_COST'">
            max(`mainAreaId`) as areaId,
            max(`mainAreaName`) as areaName,
        </if>
        <if test="costType!='MY_MAIN_COST'">
            `areaId`,
            `areaName`,
        </if>
        sum(`hours`) as projectHours
        from area_project_user_cost
        <where>
            <if test="startDate!=null">
                `date` <![CDATA[ >= ]]> #{startDate}
            </if>
            <if test="endDate!=null">
                and `date` <![CDATA[ <= ]]> #{endDate}
            </if>
            <if test="costType=='MY_MAIN_COST'">
                and `mainAreaId` = #{areaId}
            </if>
            <if test="costType=='MY_EARN'">
                and `mainAreaId` != #{areaId}
                and `areaId` != #{areaId}
            </if>
            <if test="costType=='OTHER_COST'">
                and `mainAreaId` = #{areaId}
                and `areaId` != #{areaId}
            </if>

        </where>
        <if test="costType=='MY_MAIN_COST'">
            group by  `projectId`,`projectName`
        </if>
        <if test="costType!='MY_MAIN_COST'">
            group by  `projectId`,`projectName`,`areaName`,`areaId`
        </if>

    </select>
</mapper>